#!/usr/bin/env node
import spawn from "cross-spawn";
import { getBinaryPath } from "../utils.js";
// import pkg from './package.json' with { type: 'json' };

function getArgs() {
  const argv = process.argv;

  // Find the index of the package name or cli reference
  for (let i = 0; i < argv.length; i++) {
    if (argv[i].includes("pocketbase-server") || argv[i].includes("cli")) {
      return argv.slice(i + 1);
    }
  }

  // Fallback to standard node execution
  return argv.slice(2);
}

// pocketbase-server always exits with 0, so we need to watch for errors
let status = 0;

const proc = spawn(getBinaryPath(), getArgs(), {
  stdio: ["inherit", "pipe", "pipe"],
  env: {
    ...process.env,
    FORCE_COLOR: "1",
  },
});

// Watch stdout for errors
proc.stdout.on("data", (data) => {
  const output = data.toString();
  if (output.includes("Error:")) {
    status = 1;
  }
  process.stdout.write(data);
});

// Watch stderr for errors
proc.stderr.on("data", (data) => {
  const output = data.toString();
  if (output.includes("Error:")) {
    status = 1;
  }
  process.stderr.write(data);
});

// Wait for process to exit
proc.on("close", (code) => {
  process.exit(status || code);
});
